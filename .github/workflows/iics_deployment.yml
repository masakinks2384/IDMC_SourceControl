# This sample source code is offered only as an example of what can or might be built using the IICS Github APIs, 
# and is provided for educational purposes only. This source code is provided "as-is" 
# and without representations or warrantees of any kind, is not supported by Informatica.
# Users of this sample code in whole or in part or any extraction or derivative of it 
# assume all the risks attendant thereto, and Informatica disclaims any/all liabilities 
# arising from any such use to the fullest extent permitted by law.

name: DEPLOY_MAPPING_TASK

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      committed_sha:
        description: "Hash to deploy"
        type: string
        required: true

env:
  IICS_LOGIN_URL: https://dm-us.informaticacloud.com
  IICS_POD_URL: https://na1.dm-us.informaticacloud.com/saas
 
  IICS_USERNAME: ${{ secrets.IICS_USERNAME }}
  IICS_PASSWORD: ${{ secrets.IICS_PASSWORD }}

  UAT_IICS_USERNAME: ${{ secrets.UAT_IICS_USERNAME }}
  UAT_IICS_PASSWORD: ${{ secrets.UAT_IICS_PASSWORD }}

  COMMIT_HASH: ${{ github.event.inputs.committed_sha }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  dev_build:
    name: Review Development Code
    environment:
      name: development
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Install python and dependent modules
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      
      - name: Install python modules
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Login to development
        run: |
          python ./scripts/infa_login.py

      - name: Test Committed Mapping Tasks
        run: python ./scripts/infa_get_updates.py

  uat_commit:
    name: Complete uat promotion
    environment:
      name: uat
    needs: dev_build
    runs-on: ubuntu-latest

    steps:
      # Install python and dependent modules
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      
      - name: Install python modules
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # Checkout the dev branch
      - name: Checkout dev branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure the full history is fetched
      
      - name: Set Git User Info
        run: |
          git config --global user.email "masakinks@gmail.com"
          git config --global user.name "masakinks2384"
                       
      # Switch to the UAT branch and make sure it's up-to-date
      - name: Checkout UAT Branch
        run: |
          git checkout uat
          git pull origin uat

      # Cherry-pick the commit from the dev branch based on the provided commit hash
      - name: Cherry-pick Commit from Dev
        run: | 
          git cherry-pick -X theirs ${{ env.COMMIT_HASH }}  # Automatically use changes from the commit being cherry-picked
      
      # Push the changes to the UAT branch
      - name: Push to UAT Branch
        run: |
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/masakinks2384/${{ github.repository }}.git uat --force

      - name: Verify Commit Log
        run: |
          git checkout uat
          git log -1
    
      # Get the latest commit hash in the uat branch
      - name: Get latest UAT commit hash
        run: |
          git pull origin uat  # Ensure you are on the uat branch
          echo "UAT_COMMIT_HASH=$(git log -1 --pretty=format:%H)" >> $GITHUB_ENV

      #- name: Login to UAT environment
      #  run: |
      #    python ./scripts/infa_login.py
          
      #- name: Sync and test UAT deployment
      #  run: python ./scripts/infa_update_and_test.py
